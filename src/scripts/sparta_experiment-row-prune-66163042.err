/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:65: UserWarning: Overwriting deit_tiny_patch16_224 in registry with models.deit.deit_tiny_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:88: UserWarning: Overwriting deit_small_patch16_224 in registry with models.deit.deit_small_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:111: UserWarning: Overwriting deit_base_patch16_224 in registry with models.deit.deit_base_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:134: UserWarning: Overwriting deit_tiny_distilled_patch16_224 in registry with models.deit.deit_tiny_distilled_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:157: UserWarning: Overwriting deit_small_distilled_patch16_224 in registry with models.deit.deit_small_distilled_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:180: UserWarning: Overwriting deit_base_distilled_patch16_224 in registry with models.deit.deit_base_distilled_patch16_224. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:203: UserWarning: Overwriting deit_base_patch16_384 in registry with models.deit.deit_base_patch16_384. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/nfs/home/mmakni/kdd_camera_ready/src/models/deit.py:227: UserWarning: Overwriting deit_base_distilled_patch16_384 in registry with models.deit.deit_base_distilled_patch16_384. This is because the name being registered conflicts with an existing name. Please check if this is not expected.
  @register_model
/home/mmakni/.local/lib/python3.11/site-packages/opacus/utils/module_utils.py:102: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  module_copy = torch.load(bytesio)
/nfs/home/mmakni/kdd_camera_ready/src/train_cifar.py:102: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained_weights = torch.load(checkpoint_path, map_location="cpu")
/nfs/home/mmakni/kdd_camera_ready/src/opacus_per_sample/privacy_engine_per_sample.py:138: UserWarning: Secure RNG turned off. This is perfectly fine for experimentation as it allows for much faster training performance, but remember to turn it on and retrain one last time before production with ``secure_mode`` turned on.
  warnings.warn(
/home/mmakni/.local/lib/python3.11/site-packages/opacus/accountants/analysis/rdp.py:332: UserWarning: Optimal order is the largest alpha. Please consider expanding the range of alphas to get a tighter privacy bound.
  warnings.warn(
/home/mmakni/.local/lib/python3.11/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
slurmstepd: error: *** JOB 66163042 ON node3302 CANCELLED AT 2025-05-24T15:56:19 DUE TO TIME LIMIT ***
